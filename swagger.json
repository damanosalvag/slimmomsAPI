{
  "openapi": "3.0.1",
  "info": {
    "version": "2.0.0",
    "title": "Slimmom API docs",
    "description": "API documentation for GoIT project 'Slimmom'. [Backend github repository](https://github.com/Dimitr-Remicio/SlimMomAPI)",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "servers": [{ "url": "https://slimmomsapi-dev-bbqt.3.us-1.fl0.io/api" }],
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "tags": [
    {
      "name": "Auth",
      "description": "Authorization endpoints"
    },
    {
      "name": "Daily-rate",
      "description": "Daily-rate endpoints"
    },
    {
      "name": "Product-search",
      "description": "Product-search endpoints"
    },
    {
      "name": "Day",
      "description": "Day endpoints"
    },
    {
      "name": "User",
      "description": "User endpoints"
    }
  ],
  "paths": {
    "/users/signup": {
      "post": {
         "tags": ["Auth"],
         "summary": "User registration",
         "parameters": [],
         "requestBody": {
            "description": "Registration's object",
            "required": true,
            "content": {
               "application/json": {
                  "schema": {
                     "$ref": "#/components/schemas/RegistrationRequest"
                  }
               }
            }
         },
         "responses": {
            "201": {
               "description": "Created",
               "content": {}
            },
            "400": {
               "description": "Bad request (invalid request body)",
               "content": {}
            },
            "409": {
               "description": "Provided email already exists",
               "content": {}
            }
         }
      }
   },
   "/users/login": {
      "post": {
         "tags": ["Auth"],
         "summary": "User authentication",
         "parameters": [],
         "requestBody": {
            "description": "Authentication's object",
            "required": true,
            "content": {
               "application/json": {
                  "schema": {
                     "$ref": "#/components/schemas/LoginRequest"
                  }
               }
            }
         },
         "responses": {
            "200": {
               "description": "Successful operation",
               "content": {
                  "application/json": {
                     "schema": {
                        "$ref": "#/components/schemas/LoginResponse"
                     }
                  }
               }
            },
            "400": {
               "description": "Bad request (invalid request body)",
               "content": {}
            },
            "403": {
               "description": "Email doesn't exist / Password is wrong",
               "content": {}
            }
         }
      }
   },
   "/users/logout": {
      "post": {
         "tags": ["Auth"],
         "summary": "Logout",
         "security": [{ "Bearer": [] }],
         "parameters": [],
         "responses": {
            "204": {
               "description": "Successful operation"
            },
            "400": {
               "description": "No token provided",
               "content": {}
            },
            "401": {
               "description": "Unauthorized (invalid access token)",
               "content": {}
            },
            "404": {
               "description": "Invalid user / Invalid session",
               "content": {}
            }
         }
      }
   },
    "/auth/refresh": {
      "post": {
        "tags": ["Auth"],
        "summary": "Get new pair of tokens (use Bearer {refreshToken} instead of accessToken)",
        "security": [{ "Bearer": [] }],
        "parameters": [],
        "requestBody": {
          "description": "Request body with session's id",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshTokensRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RefreshTokensResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body) / No token provided",
            "content": {}
          },
          "401": {
            "description": "Unauthorized (invalid refresh token)",
            "content": {}
          },
          "404": {
            "description": "Invalid user / Invalid session",
            "content": {}
          }
        }
      }
    },
    "/calculator": {
      "post": {
        "tags": ["Daily-rate"],
        "summary": "Get daily rate information based on your characteristics",
        "parameters": [],
        "requestBody": {
          "description": "Object with user's characteristics",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DailyRateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DailyRateResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          }
        }
      }
    },
    "/users/calculator/?_id={userId}": {
      "patch": {
         "tags": ["Daily-rate"],
         "summary": "Post your characteristics to the website and get daily rate information",
         "security": [{ "Bearer": [] }],
         "parameters": [
            {
               "name": "userId",
               "in": "path",
               "description": "Id of the user",
               "required": true,
               "type": "string"
            }
         ],
         "requestBody": {
            "description": "Object with user's characteristics",
            "required": true,
            "content": {
               "application/json": {
                  "schema": {
                     "$ref": "#/components/schemas/DailyRateRequest"
                  }
               }
            }
         },
         "responses": {
            "200": {
               "description": "Successful operation",
               "content": {
                  "application/json": {
                     "schema": {
                        "$ref": "#/components/schemas/DailyRateWithUserIdResponse"
                     }
                  }
               }
            },
            "400": {
               "description": "No token provided",
               "content": {}
            },
            "401": {
               "description": "User not authorized (invalid access token)",
               "content": {}
            },
            "404": {
               "description": "Invalid id / Invalid session",
               "content": {}
            }
         }
      }
   },
    "/products?search=": {
      "get": {
        "tags": ["Product-search"],
        "summary": "Search and get a list of products by query",
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "Name of the product (in English) you want to find. Min length - 1, max length - 30",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResponse"
                }
              }
            }
          },
          "400": {
            "description": "No token provided",
            "content": {}
          },
          "401": {
            "description": "Unauthorized (invalid access token)",
            "content": {}
          },
          "404": {
            "description": "Invalid query name / Invalid user / Invalid session",
            "content": {}
          }
        }
      }
    },
    "/days": {
      "patch": {
        "tags": ["Day"],
        "summary": "Post an eaten product",
        "security": [{ "Bearer": [] }],
        "parameters": [],
        "requestBody": {
          "description": "Object with date and eaten product's id",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchtDayRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatchDayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body) / No token provided",
            "content": {}
          },
          "401": {
            "description": "Unauthorized (invalid access token)",
            "content": {}
          },
          "404": {
            "description": "Product not found / Habit not found / Invalid user / Invalid session",
            "content": {}
          }
        }
      },
      "delete": {
        "tags": ["Day"],
        "summary": "Delete eaten product",
        "security": [{ "Bearer": [] }],
        "parameters": [],
        "requestBody": {
          "description": "Object with eaten product's id you want to delete",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteDayRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteDayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body) / No token provided",
            "content": {}
          },
          "401": {
            "description": "Unauthorized (invalid access token)",
            "content": {}
          },
          "404": {
            "description": "Product not found / Day not found / Invalid user / Invalid session",
            "content": {}
          }
        }
      }
    },
    "/days/info": {
      "post": {
        "tags": ["Day"],
        "summary": "Get info for day",
        "security": [{ "Bearer": [] }],
        "parameters": [],
        "requestBody": {
          "description": "Object with date of the day you want to get info for",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetDayRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation / No such day found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetDayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body) / No token provided",
            "content": {}
          },
          "401": {
            "description": "Unauthorized (invalid access token)",
            "content": {}
          },
          "404": {
            "description": "Invalid user / Invalid session",
            "content": {}
          }
        }
      }
    },
    "/users/": {
      "get": {
        "tags": ["User"],
        "summary": "Get user info",
        "security": [{ "Bearer": [] }],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserInfo"
                }
              }
            }
          },
          "400": {
            "description": "No token provided",
            "content": {}
          },
          "401": {
            "description": "Unauthorized (invalid access token)",
            "content": {}
          },
          "404": {
            "description": "Invalid user / Invalid session",
            "content": {}
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "RegistrationRequest": {
        "required": ["email", "password", "name"],
        "type": "object",
        "properties": {
           "email": {
              "type": "string",
              "description": "User's email",
              "format": "email"
           },
           "password": {
              "type": "string",
              "description": "User's password ned leters, numbers and characters",
              "example": "123Qery@"
           },
           "name": {
              "type": "string",
              "description": "User's name",
              "example": "Paco"
           }
        }
     },
      "RegistrationResponse": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "Paco"
          },
          "id": {
            "type": "string",
            "description": "User's id",
            "example": "507f1f77bcf86cd799439011"
          }
        }
      },
      "LoginRequest": {
        "required": ["email", "password"],
        "type": "object",
        "properties": {
           "email": {
              "type": "string",
              "description": "User's email",
              "format": "email"
           },
           "password": {
              "type": "string",
              "description": "User's password",
              "example": "123Qery@"
           }
        }
     },
     "LoginResponse": {
        "type": "object",
        "properties": {  
           "token": {
              "type": "string",
              "description": "Session's access token (needed for all requests)",
              "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1aWQiOiI1ZmMyMDg1YmQwOTM2NTI4MTA3Y2UyNzQiLCJzaWQiOiI1ZmMyZDJmY2UxZDIwNTA2NzAyYmRkMjIiLCJpYXQiOjE2MDY2MDM1MTYsImV4cCI6MTYwNjYwNzExNn0.rJ_QjU4KvA76H96RHsvOBChK0Vjbd0NmqjMxdQVJIXA"
           },
           "user": {
              "type": "object",
              "description": "User's data",
              "properties": {
                 "email": {
                    "type": "string",
                    "description": "User's email",
                    "format": "email"
                 },
                 "name": {
                    "type": "string",
                    "description": "User's name",
                    "example": "Paco"
                 },
                 "blood": {
                    "type": "Number",
                    "description": "blolld type user 1-4)",
                    "example": "1",
                    "enum": [1, 2, 3, 4]
                  },
                  "height": {
                    "type": "number",
                    "description": "User's height (cm)",
                    "minimum": 100,
                    "maximum": 250,
                    "example": 180
                 },
                 "age": {
                    "type": "number",
                    "description": "User's age",
                    "minimum": 18,
                    "maximum": 100,
                    "example": 25
                 },
                 "weightCurrent": {
                    "type": "number",
                    "description": "User's weight (kg)",
                    "minimum": 20,
                    "maximum": 500,
                    "example": 80
                 },
                 "desiredWeight": {
                    "type": "number",
                    "description": "User's desired weight",
                    "minimum": 20,
                    "maximum": 500,
                    "example": 60
                 },
                 "dailyRate": {
                    "type": "number",
                    "description": "Your daily rate in kcal",
                    "example": 2500
                 },
                 "_id": {
                    "type": "ObjectId",
                    "description": "User's id",
                    "example": "5feaae49ac348a44e08b76ae"
                 }
              }
           },
           
           "todaySummary": {
              "type": "array",
              "description": "Today's summary (could be empty if no summary for today exists)",
              "items": {
                 "type": "object",
                 "properties": {
                    "id": {
                       "type": "ObjectId",
                       "description": "Day summary's id",
                       "example": "5febe675d043b8366847a43e"
                    },
                    "date": {
                       "type": "string",
                       "description": "Day's date",
                       "example": "2020-12-30"
                    },
                    "userId": {
                       "type": "ObjectId",
                       "description": "User's id",
                       "example": "5feaae49ac348a44e08b76ae"
                    },
                    "dailyRate": {
                       "type": "number",
                       "description": "Your daily rate in per day kcal",
                       "example": 2000
                    },
                    "left": {
                       "type": "number",
                       "description": "Your daily rate in kcal",
                       "example": 2000
                    },
                    "consumed": {
                       "type": "number",
                       "description": "For descrip",
                       "example": 0
                    },
                    "percentOfDailyRate": {
                       "type": "number",
                       "description": "For descrip",
                       "example": 0
                    }
                 }
              }
           }
           
        }
     },
      "RefreshTokensRequest": {
        "type": "object",
        "required": ["sid"],
        "properties": {
          "sid": {
            "type": "string",
            "description": "Session's id ('sid' field after authentication)",
            "example": "507f1f77bcf86cd799439011"
          }
        }
      },
      "RefreshTokensResponse": {
        "type": "object",
        "properties": {
          "newAccessToken": {
            "type": "string",
            "description": "Access token",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1aWQiOiI1ZmMyMDg1YmQwOTM2NTI4MTA3Y2UyNzQiLCJzaWQiOiI1ZmMyZDJmY2UxZDIwNTA2NzAyYmRkMjIiLCJpYXQiOjE2MDY2MDM1MTYsImV4cCI6MTYwNjYwNzExNn0.rJ_QjU4KvA76H96RHsvOBChK0Vjbd0NmqjMxdQVJIXA"
          },
          "newRefreshToken": {
            "type": "string",
            "description": "Refresh token",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1aWQiOiI1ZmMyMDg1YmQwOTM2NTI4MTA3Y2UyNzQiLCJzaWQiOiI1ZmMyZDJmY2UxZDIwNTA2NzAyYmRkMjIiLCJpYXQiOjE2MDY2MDM1MTYsImV4cCI6MTYwNjYwNzExNn0.rJ_QjU4KvA76H96RHsvOBChK0Vjbd0NmqjMxdQVJIXB"
          },
          "sid": {
            "type": "string",
            "description": "New session's id",
            "example": "507f1f77bcf86cd799439011"
          }
        }
      },
      "DailyRateRequest": {
        "required": ["weightCurrent", "height", "age", "desiredWeight", "blood"],
        "type": "object",
        "properties": {
           "weightCurrent": {
              "type": "number",
              "description": "User's weight (kg)",
              "minimum": 20,
              "maximum": 500,
              "example": 100
           },
           "height": {
              "type": "number",
              "description": "User's height (cm)",
              "minimum": 100,
              "maximum": 250,
              "example": 170
           },
           "age": {
              "type": "number",
              "description": "User's age",
              "minimum": 18,
              "maximum": 100,
              "example": 30
           },
           "weightDesired": {
              "type": "number",
              "description": "User's desired weight",
              "minimum": 20,
              "maximum": 500,
              "example": 60
           },
           "blood": {
              "type": "number",
              "description": "User's blood type",
              "enum": [1, 2, 3, 4]
           }
        }
     },
     "DailyRateResponse": {
        "type": "object",
        "properties": {
           "dailyRate": {
              "type": "number",
              "description": "Daily rate in kcal",
              "example": 1289
           },
           "notHealthy": {
              "type": "array",
              "items": {
                 "type": "string",
                 "description": "Not allowed product",
                 "example": ["Omelet with cheese"]
              }
           }
        }
     },
      "DailyRateWithUserIdResponse": {
           "type": "object",
           "properties": {
              
              "user": {
                "type": "array",
                "items": {
                   "type": "object",
                   "description": "Updated summary",
                   "properties": {
                    "_id": {
                      "type": "string",
                      "description": "User's id",
                      "example": "65483d60ea4c0e397c7f8da4"
                    },
                      "height": {
                         "type": "number",
                         "description": "Kcal left to consume",
                         "example": 1318
                      },
                      "consumed": {
                         "type": "number",
                         "description": "Kcal consumed",
                         "example": 96
                      },
                      "dailyRate": {
                         "type": "number",
                         "description": "Daily rate in kcal user",
                         "example": 1604
                      },
                      "percentOfDailyRate": {
                         "type": "number",
                         "description": "Percents consumed of daily rate",
                         "example": 6.789250353606789
                      },
                      "notAllowedProducts": {
                        "type": "array",
                        "description": "User's not allowed products (based on blood type)",
                        "items": {
                           "type": "string",
                           "description": "Not allowed product",
                           "example": "Omelet with cheese"
                        }
                     },
                      "date": {
                         "type": "date",
                         "description": "User's id",
                         "example": "65483d60ea4c0e397c7f8da4"
                      },
                      "isLoggedIn":{
                        "type": "boolean",
                        "description": "validated if de user is login",
                        "example": "true"
                       }
                   }
                }
             },
             "notHealthy": {
              "type": "array",
              "description": "User's  not healt products",
              "items": {
                 "type": "object",
                 "description": "products not ",
                 "properties": {
                    "_id": {
                       "type": "string",
                       "description": "Product id",
                       "example": "5feaae49ac348a44e08b76ae"
                    },
                    "title": {
                       "type": "string",
                       "description": "product name",
                       "example": "Omelet with cheese"
                    },
                    "weight": {
                       "type": "number",
                       "description": "Product's weight (100g)",
                       "example": 200
                    },
                    "calories": {
                       "type": "number",
                       "description": "Calories in product",
                       "example": 96
                    },
                    "groupBloodNotAllowed": {
                      "type": "array",
                      "description": "Product's allowed/not allowed status on all blood types (first item is null - 0 index in array)",
                      "items": {
                         "oneOf": [{ "type": "null" }, { "type": "boolean" }]
                      },
                      "example": [null, true, false, false, false]
                   }
                 }
              }
           },
             
              "summary": {
                 "type": "array",
                 "items": {
                    "type": "object",
                    "description": "Updated summary",
                    "properties": {
                       "left": {
                          "type": "number",
                          "description": "Kcal left to consume",
                          "example": 1318
                       },
                       "consumed": {
                          "type": "number",
                          "description": "Kcal consumed",
                          "example": 96
                       },
                       "dailyRate": {
                          "type": "number",
                          "description": "Daily rate in kcal",
                          "example": 1414
                       },
                       "percentOfDailyRate": {
                          "type": "number",
                          "description": "Percents consumed of daily rate",
                          "example": 6.789250353606789
                       },
                       "userId": {
                        "type": "ObjectId",
                        "description": "User's id",
                        "example": "65483d60ea4c0e397c7f8da4"
                       },
                       "date": {
                          "type": "date",
                          "description": "User's id",
                          "example": "65483d60ea4c0e397c7f8da4"
                       }

                    }
                 }
              },
              "__v": {
                 "type": "integer",
                 "description": "MongoDB document service versionKey (ignore)"
              }
           },
           "ProductResponse": {
              "type": "array",
              "items": {
                 "type": "object",
                 "properties": {
                    "_id": {
                       "type": "string",
                       "description": "Product's id",
                       "example": "5d51694802b2373622ff552c"
                    },
                    "categories": {
                       "type": "array",
                       "items": {
                          "type": "string",
                          "description": "Product's category",
                          "example": "eggs"
                       }
                    },
                    "weight": {
                       "type": "number",
                       "description": "Product's weight (100g)",
                       "example": 100
                    },
                    "title": {
                       "type": "object",
                       "description": "Product's russian and ukrainian titles",
                       "example": "Melange egg"
                    },
                    "calories": {
                       "type": "number",
                       "description": "Product's kcal for 100g",
                       "example": 157
                    },
                    "groupBloodNotAllowed": {
                       "type": "array",
                       "description": "Product's allowed/not allowed status on all blood types (first item is null - 0 index in array)",
                       "items": {
                          "oneOf": [{ "type": "null" }, { "type": "boolean" }]
                       },
                       "example": [null, true, false, false, false]
                    },
                    "__v": {
                       "type": "integer",
                       "description": "MongoDB document service versionKey (ignore)"
                    }
                 }
              }
           }
      },
      "ProductResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "_id": {
              "type": "string",
              "description": "Product's id",
              "example": "5d51694802b2373622ff552c"
            },
            "categories": {
              "type": "array",
              "items": {
                "type": "string",
                "description": "Product's category",
                "example": "eggs"
              }
            },
            "weight": {
              "type": "number",
              "description": "Product's weight (100g)",
              "example": 100
            },
            "title": {
              "type": "object",
              "description": "Product's russian and ukrainian titles",
              "example":"Melange egg"
            },
            "calories": {
              "type": "number",
              "description": "Product's kcal for 100g",
              "example": 157
            },
            "groupBloodNotAllowed": {
              "type": "array",
              "description": "Product's allowed/not allowed status on all blood types (first item is null - 0 index in array)",
              "items": {
                "oneOf": [{ "type": "null" }, { "type": "boolean" }]
              },
              "example": [null, true, false, false, false]
            },
            "__v": {
              "type": "integer",
              "description": "MongoDB document service versionKey (ignore)"
            }
          }
        }
      },
      "PatchtDayRequest": {
        "type": "object",
        "required": ["date", "productId", "weight"],
        "properties": {
          "date": {
            "type": "string",
            "description": "Day's date, use current date",
            "example": "2023-11-07"
          },
          "productId": {
            "type": "string",
            "description": "Product's id",
            "example": "5d51694802b2373622ff56d6"
          },
          "weight": {
            "type": "number",
            "description": "Product's weight",
            "example": 100,
            "minimum": 1,
            "maximum": 3000
          }
        }
      },
      "PatchDayResponse": {
        "type": "object",
        "properties": {
          "addedProduct": {
            "type": "object",
            "properties": {
              "product": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    
                    "_id": {
                      "type": "string",
                      "description": "Eaten product's id",
                      "example": "5d51694802b2373622ff56d6"
                    },
                    "title": {
                      "type": "string",
                      "description": "Eaten product's description",
                      "example": "Whole-ground oat flour Lifestyle"
                    },
                    "weight": {
                      "type": "number",
                      "description": "Eaten product's weight",
                      "example": 100
                    },
                    "calories": {
                      "type": "number",
                      "description": "kcal consumed",
                      "example": 368
                    },
                    "groupBloodNotAllowed": {
                      "type": "array",
                      "description": "Product's allowed/not allowed status on all blood types (first item is null - 0 index in array)",
                      "items": {
                         "oneOf": [{ "type": "null" }, { "type": "boolean" }]
                      },
                      "example": [null, true, false, false, false]
                   }
                  }
                }
              },
              "dayId": {
                "type": "string",
                "description": "Eaten product's id",
                "example": "654a5102b07d7d39528b3c84"
              },
              "UserId": {
                "type": "string",
                "description": "Eaten product's id",
                "example": "654a5102b07d7d39528b3c84"
              },
              "weight": {
                "type": "number",
                "description": "Eaten product's weight",
                "example": 100
              },
              "calories": {
                "type": "number",
                "description": "kcal consumed",
                "example": 368
              }
            }
          },
          "summary": {
            "type": "object",
            "description": "Updated summary (or newSummary)",
            "properties": {
              "id": {
                "type": "string",
                "description": "Day's id",
                "example": "654a481100b1c10dd00cd59d"
              },
              "date": {
                "type": "string",
                "description": "Day's date",
                "example": "2023-11-07"
              },
              "userId": {
                "type": "string",
                "description": "User's id",
                "example": "654a481000b1c10dd00cd59b"
              },
              "dailyRate": {
                "type": "number",
                "description": "Daily rate in kcal",
                "example": 1604
              },
              "kcalLeft": {
                "type": "number",
                "description": "Kcal left to consume",
                "example": 1036
              },
              "consumed": {
                "type": "number",
                "description": "Kcal consumed",
                "example": 568
              },
              
              "percentsOfDailyRate": {
                "type": "number",
                "description": "Percents consumed of daily rate",
                "example": 35.41147132169576
              },
              "createdAt": {
                "type": "string",
                "description": "Day summary's creation date",
                "example": "2023-11-07T14:22:09.374Z"
              },
              "updatedAt": {
                "type": "string",
                "description": "Day summary's update date",
                "example": "2023-11-07T15:12:35.539Z"
              }
              
            }
          }
        }
      },
      "DeleteDayRequest": {
        "type": "object",
        "required": ["dayId", "productId","sumId"],
        "properties": {
          "dayId": {
            "type": "string",
            "description": "Day's id",
            "example": "654a5102b07d7d39528b3c84"
          },
          "eatenProductId": {
            "type": "string",
            "description": " Product's id",
            "example": "5d51694802b2373622ff56d6"
          },
          "sumId": {
            "type": "string",
            "description": " Sumarys's id",
            "example": "654a481100b1c10dd00cd59d"
          }
        }
      },
      "DeleteDayResponse": {
        "type": "object",
        "description": "Updated summary",
        "properties": {
          "updateDay": {
            "type": "object",
            "description": "Updated summary (or newSummary)",
            "properties": {
              "id": {
                "type": "string",
                "description": "Day's id",
                "example": "654a5102b07d7d39528b3c84"
              },
              "userId": {
                "type": "string",
                "description": "User's id",
                "example": "654a481000b1c10dd00cd59b"
              },
              "calories": {
                "type": "number",
                "description": "Calories in product",
                "example": 368
              },
              "createdAt": {
                "type": "string",
                "description": "Day summary's creation update date",
                "example": "2023-11-07T15:00:18.935Z"
              },
              "date": {
                "type": "string",
                "description": "Curren date",
                "example": "2023-11-07T15:00:18.935Z"
              },

              "sumId": {
                "type": "string",
                "description": "Day's id",
                "example": "654a481100b1c10dd00cd59d"
              },
              "updateAt": {
                "type": "string",
                "description": "Day summary's creation update date",
                "example": "2023-11-07T18:06:26.474Z"
              },
              "weight": {
                "type": "number",
                "description": "Kcal left to consume",
                "example": 100
              }
              
            }
          },
          "message":{
            "type": "object",
            "description": "Updated summary (or newSummary)",
            "example":"Food deleted"
          },
          "summary": {
            "type": "object",
            "description": "Updated summary (or newSummary)",
            "properties": {
              "id": {
                "type": "string",
                "description": "Sum's id",
                "example": "654a481100b1c10dd00cd59d"
              },
              "date": {
                "type": "string",
                "description": "Day's date",
                "example": "2023-11-07T14:22:09.373Z"
              },
              "userId": {
                "type": "string",
                "description": "User's id",
                "example": "654a481000b1c10dd00cd59b"
              },
              "dailyRate": {
                "type": "number",
                "description": "Daily rate in kcal",
                "example": 1604
              },
              "left": {
                "type": "number",
                "description": "Kcal left to consume",
                "example": 1404
              },
              "consumed": {
                "type": "number",
                "description": "Kcal consumed",
                "example": 200
              },
              
              "percentsOfDailyRate": {
                "type": "number",
                "description": "Percents consumed of daily rate",
                "example": 35.41147132169576
              },
              "createdAt": {
                "type": "date",
                "description": "Day summary's creation date",
                "example": "2023-11-07T14:22:09.374Z"
              },
              "updatedAt": {
                "type": "date",
                "description": "Day summary's update date",
                "example": "2023-11-07T18:06:26.464Z"
              }
              
            }
          }
          
        }
      },
      "GetDayRequest": {
        "type": "object",
        "required": ["date"],
        "properties": {
          "date": {
            "type": "string",
            "description": "Day's date",
            "example": "2023-11-07"
          }
        }
      },
      "GetDayResponse": {
        "type": "object",
        "description": "Day (or newDay) when the product was eaten",
        "properties": {
          "id": {
            "type": "string",
            "description": "Day's id",
            "example": "507f1f77bcf86cd799439011"
          },
          "eatenProducts": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "title": {
                  "type": "string",
                  "description": "Eaten product's description",
                  "example": "Egg powder omelette"
                },
                "weight": {
                  "type": "number",
                  "description": "Eaten product's weight",
                  "example": 200
                },
                "kcal": {
                  "type": "number",
                  "description": "kcal consumed",
                  "example": 157
                },
                "id": {
                  "type": "string",
                  "description": "Eaten product's id",
                  "example": "9b1deb4d-3b7d-4bad-9bdd-2b0d7b3dcb6d"
                }
              }
            }
          },
          "date": {
            "type": "string",
            "description": "Day's date",
            "example": "2023-11-07"
          },
          "daySummary": {
            "type": "object",
            "description": "Day's summary",
            "properties": {
              "id": {
                "type": "string",
                "description": "Day's id",
                "example": "507f1f77bcf86cd799439011"
              },
              "date": {
                "type": "string",
                "description": "Day's date",
                "example": "2023-11-07"
              },
              "kcalLeft": {
                "type": "number",
                "description": "Kcal left to consume",
                "example": 1194.5
              },
              "kcalConsumed": {
                "type": "number",
                "description": "Kcal consumed",
                "example": 157
              },
              "dailyRate": {
                "type": "number",
                "description": "Daily rate in kcal",
                "example": 1351.5
              },
              "percentsOfDailyRate": {
                "type": "number",
                "description": "Percents consumed of daily rate",
                "example": 11.616722160562338
              },
              "userId": {
                "type": "string",
                "description": "User's id",
                "example": "507f1f77bcf86cd799439012"
              }
            }
          }
        }
      },
      "GetUserInfo": {
        "type": "object",
        "description": "User's information",
        "properties": {
          "id": {
            "type": "string",
            "description": "User's id",
            "example": "507f1f77bcf86cd799439011"
          },
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "Paco"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "blood": {
            "type": "number",
            "description": "User's blood type",
            "enum": [1, 2, 3, 4]
          },
          "height": {
            "type": "number",
            "description": "User's height (cm)",
            "minimum": 100,
            "maximum": 250,
            "example": 175
          },
          "age": {
            "type": "number",
            "description": "User's age",
            "minimum": 18,
            "maximum": 100,
            "example": 30
          },
          "weightCurrent": {
            "type": "number",
            "description": "User's weight (kg)",
            "minimum": 20,
            "maximum": 500,
            "example": 100
          },
          "weightDesired": {
            "type": "number",
            "description": "User's desired weight",
            "minimum": 20,
            "maximum": 500,
            "example": 60
          },
          "dailyRate": {
            "type": "string",
            "description": "Your daily rate in kcal",
            "example": 1600
          },
          "notAllowedProducts": {
            "type": "array",
            "description": "User's not allowed products (based on blood type)",
            "items": {
              "type": "string",
              "description": "Not allowed product",
              "example": "Egg powder omelette"
            }
          },
          "token": {
            "type": "string",
            "description": "Access token",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1NGE0ODEwMDBiMWMxMGRkMDBjZDU5YiIsImlhdCI6MTY5OTM2Njk2NSwiZXhwIjoxNjk5MzcwNTY1fQ.IvOODnR83TRY8j4RO5stzRtiLfPPwnBKUiIpJ_MZqkU"
          },
          "isLoggedIn": {
            "type": "boolean",
            "description": "serves to identify if the user is",
            "example": true
          },
          "__v": {
            "type": "integer",
            "description": "MongoDB document service versionKey (ignore)"
         }
        }
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}